// Code generated by mockery v2.20.0. DO NOT EDIT.

package sower

import mock "github.com/stretchr/testify/mock"

// MockDiskUsage is an autogenerated mock type for the DiskUsage type
type MockDiskUsage struct {
	mock.Mock
}

type MockDiskUsage_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDiskUsage) EXPECT() *MockDiskUsage_Expecter {
	return &MockDiskUsage_Expecter{mock: &_m.Mock}
}

// Free provides a mock function with given fields:
func (_m *MockDiskUsage) Free() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// MockDiskUsage_Free_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Free'
type MockDiskUsage_Free_Call struct {
	*mock.Call
}

// Free is a helper method to define mock.On call
func (_e *MockDiskUsage_Expecter) Free() *MockDiskUsage_Free_Call {
	return &MockDiskUsage_Free_Call{Call: _e.mock.On("Free")}
}

func (_c *MockDiskUsage_Free_Call) Run(run func()) *MockDiskUsage_Free_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDiskUsage_Free_Call) Return(_a0 uint64) *MockDiskUsage_Free_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDiskUsage_Free_Call) RunAndReturn(run func() uint64) *MockDiskUsage_Free_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockDiskUsage interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDiskUsage creates a new instance of MockDiskUsage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDiskUsage(t mockConstructorTestingTNewMockDiskUsage) *MockDiskUsage {
	mock := &MockDiskUsage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
